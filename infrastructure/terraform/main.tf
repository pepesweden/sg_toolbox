# Autogenerated 2025-10-15 22:14:07
# Block 1: Terraform version
terraform {
  required_version = ">= 1.6.0"
  
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "~> 4.0"
    }
  }
}

# Block 2: Azure Provider
provider "azurerm" {
  features {}
}


# Resource Group
resource "azurerm_resource_group" "toolbox" {
  name     = "rg-toolbox-${var.environment}"
  location = var.location
  
  tags = {
    Environment = var.environment
    Project     = "Salesgroup Toolbox"
    ManagedBy   = "Terraform"
  }
}


# toolbox_containerRegistry
resource "azurerm_container_registry" "acr" {
  name                = "sgtoolboxacr${var.environment}"
  resource_group_name = azurerm_resource_group.toolbox.name
  location            = var.location
  sku                 = "Basic"
  admin_enabled       = false
}

# PostgreSQL Flexible Server
resource "azurerm_postgresql_flexible_server" "db" {
  name                = "psql-toolbox-${var.environment}"
  resource_group_name = azurerm_resource_group.toolbox.name
  location            = var.location
  
  administrator_login    = "toolboxadmin"
  administrator_password = var.postgres_admin_password
  
  sku_name   = "B_Standard_B1ms"
  storage_mb = 32768
  version    = "16"
  
  backup_retention_days = 7

  zone = "3"
  
  tags = {
    Environment = var.environment
    Project     = "Salesgroup Toolbox"
    ManagedBy   = "Terraform"
  }
}

# Firewall rule - Allow Azure Services
resource "azurerm_postgresql_flexible_server_firewall_rule" "allow_azure" {
  name             = "AllowAzureServices"
  server_id        = azurerm_postgresql_flexible_server.db.id
  start_ip_address = "0.0.0.0"
  end_ip_address   = "0.0.0.0"
}

# Database
resource "azurerm_postgresql_flexible_server_database" "toolbox" {
  name      = "sg_toolbox"
  server_id = azurerm_postgresql_flexible_server.db.id
}


# Key Vault
resource "azurerm_key_vault" "toolbox" {
  name                = "kv-toolbox-${var.environment}"
  resource_group_name = azurerm_resource_group.toolbox.name
  location            = var.location
  tenant_id           = data.azurerm_client_config.current.tenant_id
  
  sku_name = "standard"
  
  soft_delete_retention_days = 90
  purge_protection_enabled   = true
  
  tags = {
    Environment = var.environment
    Project     = "Salesgroup Toolbox"
    ManagedBy   = "Terraform"
  }
}

# Data source to get current Azure config
data "azurerm_client_config" "current" {}

# Give yourself access to Key Vault
resource "azurerm_key_vault_access_policy" "admin" {
  key_vault_id = azurerm_key_vault.toolbox.id
  tenant_id    = data.azurerm_client_config.current.tenant_id
  object_id    = data.azurerm_client_config.current.object_id
  
  secret_permissions = [
    "Get", "List", "Set", "Delete", "Purge"
  ]
}

### Secrets in Key Vault ###
#Key for OpenAI API call
resource "azurerm_key_vault_secret" "openai_key" {
  name         = "openai-api-key"
  value        = var.openai_api_key
  key_vault_id = azurerm_key_vault.toolbox.id
  
  depends_on = [azurerm_key_vault_access_policy.admin]
}

# pPostgres admin password
resource "azurerm_key_vault_secret" "postgres_password" {
  name         = "postgres-admin-password"
  value        = var.postgres_admin_password
  key_vault_id = azurerm_key_vault.toolbox.id
  
  depends_on = [azurerm_key_vault_access_policy.admin]
}

# Flask secret key (för sessions)
resource "azurerm_key_vault_secret" "flask_secret" {
  name         = "flask-secret-key"
  value        = var.flask_secret_key
  key_vault_id = azurerm_key_vault.toolbox.id
  depends_on   = [azurerm_key_vault_access_policy.admin]
}

# Admin password (för toolbox login)
resource "azurerm_key_vault_secret" "admin_password" {
  name         = "admin-password"
  value        = var.admin_password
  key_vault_id = azurerm_key_vault.toolbox.id
  depends_on   = [azurerm_key_vault_access_policy.admin]
}

# PostgreSQL connection string (för Container Apps)
resource "azurerm_key_vault_secret" "postgres_connection" {
  name  = "postgres-connection-string"
  value = "postgresql://${azurerm_postgresql_flexible_server.db.administrator_login}:${var.postgres_admin_password}@${azurerm_postgresql_flexible_server.db.fqdn}:5432/${azurerm_postgresql_flexible_server_database.toolbox.name}?sslmode=require"
  key_vault_id = azurerm_key_vault.toolbox.id
  depends_on   = [azurerm_key_vault_access_policy.admin]
}


# Log Analytics Workspace (för Container Apps logs)
resource "azurerm_log_analytics_workspace" "toolbox" {
  name                = "log-toolbox-${var.environment}"
  resource_group_name = azurerm_resource_group.toolbox.name
  location            = var.location
  sku                 = "PerGB2018"
  retention_in_days   = 30
  
  tags = {
    Environment = var.environment
    Project     = "Salesgroup Toolbox"
    ManagedBy   = "Terraform"
  }
}

# Container Apps Environment
resource "azurerm_container_app_environment" "toolbox" {
  name                       = "cae-toolbox-${var.environment}"
  resource_group_name        = azurerm_resource_group.toolbox.name
  location                   = var.location
  log_analytics_workspace_id = azurerm_log_analytics_workspace.toolbox.id
  
  tags = {
    Environment = var.environment
    Project     = "Salesgroup Toolbox"
    ManagedBy   = "Terraform"
  }
}